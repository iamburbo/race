// Vars
$primary-color: #89a4c7;
$secondary-color: #4e709d;
$tertiary-color: #f5b17b;
$quaternary-color: #cdd5e0;
$font-family: Poppins;
$smartphone-bp: 800px;
$tablet-bp: 1200px;

// Var exports
:export {
  primary_color: $primary-color;
  tertiary_color: $tertiary-color;
  quaternary_color: $quaternary-color;
  font_family: $font-family;
  smartphone_bp: $smartphone-bp;
  tablet_bp: $tablet-bp;
}

$themes: (
  light: (
    card-bg: white,
    page-bg: #e4e4e4,
    input-bg: rgb(240, 240, 240),
    nav-bg: white,
    font-color: black,
    box-shadow: rgb(228, 228, 228),
    cal-invalid: lightgrey,
    scroll-track: #f1f1f1,
    scroll-thumb: rgb(170, 170, 170),
    btoggle-default: lightgrey,
    btoggle-selected: $secondary-color,
  ),
  dark: (
    card-bg: rgb(49, 49, 58),
    page-bg: rgb(25, 25, 29),
    input-bg: rgb(30, 30, 36),
    nav-bg: rgb(21, 21, 24),
    font-color: white,
    box-shadow: black,
    cal-invalid: grey,
    scroll-track: rgb(170, 170, 170),
    scroll-thumb: #f1f1f1,
    btoggle-default: grey,
    btoggle-selected: $primary-color,
  ),
);

// Return a theme-map
@mixin themed() {
  @each $theme, $map in $themes {
    :global(.theme--#{$theme}) & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

// Return a value in a key-value pair for a theme
@function t($key) {
  @return map-get($theme-map, $key);
}
